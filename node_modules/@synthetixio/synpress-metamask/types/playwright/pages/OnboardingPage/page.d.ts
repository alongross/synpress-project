import type { Page } from '@playwright/test';
export declare class OnboardingPage {
    static readonly selectors: {
        GetStartedPageSelectors: {
            termsOfServiceCheckbox: string;
            createNewWallet: string;
            importWallet: string;
        };
        AnalyticsPageSelectors: {
            optIn: string;
            optOut: string;
        };
        SecretRecoveryPhrasePageSelectors: {
            recoveryStep: {
                selectNumberOfWordsDropdown: string;
                selectNumberOfWordsOption: (option: string | number) => string;
                secretRecoveryPhraseWord: (index: number) => string;
                confirmSecretRecoveryPhraseButton: string;
                error: string;
            };
            passwordStep: {
                passwordInput: string;
                confirmPasswordInput: string;
                acceptTermsCheckbox: string;
                importWalletButton: string;
                error: string;
            };
        };
        WalletCreationSuccessPageSelectors: {
            confirmButton: string;
        };
        PinExtensionPageSelectors: {
            nextButton: string;
            confirmButton: string;
        };
    };
    readonly selectors: {
        GetStartedPageSelectors: {
            termsOfServiceCheckbox: string;
            createNewWallet: string;
            importWallet: string;
        };
        AnalyticsPageSelectors: {
            optIn: string;
            optOut: string;
        };
        SecretRecoveryPhrasePageSelectors: {
            recoveryStep: {
                selectNumberOfWordsDropdown: string;
                selectNumberOfWordsOption: (option: string | number) => string;
                secretRecoveryPhraseWord: (index: number) => string;
                confirmSecretRecoveryPhraseButton: string;
                error: string;
            };
            passwordStep: {
                passwordInput: string;
                confirmPasswordInput: string;
                acceptTermsCheckbox: string;
                importWalletButton: string;
                error: string;
            };
        };
        WalletCreationSuccessPageSelectors: {
            confirmButton: string;
        };
        PinExtensionPageSelectors: {
            nextButton: string;
            confirmButton: string;
        };
    };
    readonly page: Page;
    constructor(page: Page);
    importWallet(seedPhrase: string, password: string): Promise<void>;
}
//# sourceMappingURL=page.d.ts.map