import { type Page } from '@playwright/test';
import { defineWalletSetup } from '@synthetixio/synpress-cache';
import { type Anvil, type CreateAnvilOptions } from '@viem/anvil';
import { MetaMask } from '../MetaMask';
type MetaMaskFixtures = {
    _contextPath: string;
    metamask: MetaMask;
    extensionId: string;
    metamaskPage: Page;
    createAnvilNode: (options?: CreateAnvilOptions) => Promise<{
        anvil: Anvil;
        rpcUrl: string;
        chainId: number;
    }>;
    connectToAnvil: () => Promise<void>;
    deployToken: () => Promise<void>;
    deployAndMintERC1155: () => Promise<void>;
};
export declare const metaMaskFixtures: (walletSetup: ReturnType<typeof defineWalletSetup>, slowMo?: number) => import("@playwright/test").TestType<import("@playwright/test").PlaywrightTestArgs & import("@playwright/test").PlaywrightTestOptions & MetaMaskFixtures, import("@playwright/test").PlaywrightWorkerArgs & import("@playwright/test").PlaywrightWorkerOptions>;
export {};
//# sourceMappingURL=metaMaskFixtures.d.ts.map